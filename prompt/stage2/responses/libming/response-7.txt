Based on the correction and the information provided about the patch, the root cause of CVE-2016-9827 is indeed that the original function `readBytes` does not ensure that the parsed Protect tag's password is null-terminated when reading it from a SWF file. This oversight can lead to buffer over-read vulnerabilities because the system might read beyond the intended data if it does not encounter a null terminator, expecting the string to end. 

The field in SWF related to invoking this CVE is the "Protect" tag. The Protect tag in SWF files is used to indicate that the file is protected. It can include a password that must be provided to edit the file. Mismanaging how this password is parsed and handled, as seen in this vulnerability, can allow an attacker to craft a SWF file in such a way that it exploits this flaw, potentially causing a denial of service by triggering a buffer over-read.

The corrective action taken, as described in the patch, was to shift from using `readBytes` to `readString` for parsing the Protect tag's password. `readString` inherently ensures that the data is null-terminated, thus mitigating the risk of a buffer over-read by safely handling the potential for improperly formatted or maliciously crafted input data within the Protect tag's password field.