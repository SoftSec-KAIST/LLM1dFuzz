The field in Lua related to invoking CVE-2020-24370 is specifically tied to the debug functionalities, particularly the `getlocal` and `setlocal` functions as mentioned in the description of the CVE. These functions are part of Lua's debug library and are used to access and modify the local variables of a function. The bug was essentially tied to how these functions managed the handling of local variable indices, especially in cases of unusually large or negative values, which led to negation overflow and a consequent segmentation fault.

To invoke this CVE, an attacker would typically pass an excessively large index value to either `getlocal` or `setlocal` (e.g., `2^31`), which due to insufficient handling of such values, would lead to the mentioned overflow. This improper handling was situated within the operations pertaining to the local variables and varargs (variable number of arguments passed to functions), indicating that the debug and function call mechanisms were the primary Lua features associated with this vulnerability.

So, summarizing, the specific Lua field related to invoking CVE-2020-24370 is the handling of local variables within the debug functionalities (`getlocal` and `setlocal`), manifested in the way Lua's debugging tools interact with local variables and varargs of functions.