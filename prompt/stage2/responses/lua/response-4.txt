The field in Lua that is related to invoking CVE-2020-24370 concerns the handling of local variables (and vararg parameters) within functions. Specifically, this involves the `getlocal` and `setlocal` API functions utilized for accessing and modifying the values of local variables by their positions in the function's stack frame. The vulnerability is triggered when attempting to access (with `getlocal`) or modify (with `setlocal`) local variables using large negative numbers that lead to a negation overflow, subsequently causing a segmentation fault due to incorrect memory access.

This issue is directly tied to the internal handling of these operations in the `ldebug.c` file of the Lua interpreter, which provides debug functionalities, including the retrieval (`getlocal`) and setting (`setlocal`) of local variables by their indices. The vulnerability surfaces from faulty logic in processing indices that represent vararg parameters (variable argument lists of functions) and local variables, particularly when negative indices are not correctly accounted for, leading to memory access violations.

In summary, the field related to this CVE in Lua involves the debug interface's handling of local variable and vararg parameter access and modification through the `getlocal` and `setlocal` functions.