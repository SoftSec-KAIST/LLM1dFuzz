The field in Lua related to invoking CVE-2020-24370 is directly associated with the handling of local variables and vararg (variable arguments) in Lua functions. Specifically, the vulnerability can be triggered through the functions for accessing local variables (`getlocal` and `setlocal`) as outlined in the description of the CVE. These functions are used for getting and setting the values of local variables of a Lua function at runtime.

In the context provided, the vulnerability manifests in the way these functions handle large negative numbers when attempting to access local variables or variable arguments (`vararg`). The incorrect handling and negation overflow discussed occur in the `ldebug.c` file, which is responsible for debug information, including the retrieval of local variable information. Hence, the exploitation of this CVE would be closely tied to the functionality dealing with local variable and vararg management within Lua scripts.

The debug interface (`lua_getlocal` and `lua_setlocal` API functions, which internally use `getlocal` and `setlocal`) allows a script or a debugger to access local variables of a function. By passing a large negative index, as demonstrated (`2^31`), an attacker could exploit this vulnerability to cause a negation overflow leading to a segmentation fault, essentially crashing the Lua state or potentially leading to further undefined behavior.

Thus, the field in Lua related to this CVE is primarily concerned with debugging and specifically the handling of function local variables and variable arguments within the debug functionality.