The CVE-2020-24370 vulnerability is related to the handling of local variables within Lua functions â€“ more specifically, it involves the `getlocal` and `setlocal` functions. These functions are used for accessing and modifying local variables in Lua code. The root cause of the vulnerability lies in the implementation of these functions in the `ldebug.c` file, which contains debugging facilities for Lua, including the capability to inspect local variables.

The erroneous handling was specifically related to the interaction with vararg functions (functions that accept a variable number of arguments). In Lua, these are functions defined with `...` (three dots), allowing them to capture any number of additional arguments passed to them. The issue arises when attempting to access these vararg arguments using `getlocal` or `setlocal` with a very large negative index, leading to a negation overflow and subsequently a segmentation fault when the overflowed index is used as part of the memory access operation.

So, to directly answer your question, the field in Lua related to invoking CVE-2020-24370 is the handling of local variables (including vararg parameters) in the context of Lua's debugging facilities (`ldebug.c`). The fix adjusts how negative indices are processed, ensuring that accessing local variables and varargs does not lead to overflow and improper memory access.