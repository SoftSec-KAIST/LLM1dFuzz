The root cause of CVE-2018-13785 in `libpng 1.6.34` is an incorrect calculation of `row_factor` in the function `png_check_chunk_length` within `pngrutil.c`. This incorrect calculation could lead to an integer overflow. When the overflowed value is then used in a division operation as part of the process for checking chunk length for IDAT (image data) chunks, it can result in a divide-by-zero error. This situation arises specifically while processing a crafted PNG file, causing a denial of service (DoS) due to the application crashing.

The vulnerability stems from how `row_factor` is calculated, where it combines several attributes of the PNG image being processed (`width`, `channels`, `bit_depth`, and `interlaced` status) to determine the maximum acceptable size of IDAT chunks. If these attribute values are crafted to produce an overflow in the `row_factor` calculation, the subsequent steps that rely on `row_factor` can be misled, especially the division operation that leads to a DoS condition when `row_factor` incorrectly becomes zero or an excessively large value not intended for normal operation.

The patch addresses this issue by correctly casting the operands in the calculation to `size_t` before performing the arithmetic operations. This ensures that the resulting `row_factor` correctly reflects the size requirements without overflowing. Additionally, the patch introduces a check to ensure if the resultant `idat_limit` calculation based on `row_factor` and `png_ptr->height` would overflow, then it sets `idat_limit` to `PNG_UINT_31_MAX` to prevent using an invalid size limit. This careful handling of variable types and overflow conditions resolves the vulnerability and ensures that `libpng` can safely process even specially crafted PNG files without resulting in a denial of service.