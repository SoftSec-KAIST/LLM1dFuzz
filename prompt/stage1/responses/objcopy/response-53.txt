The root cause of CVE-2017-8393 in the Binary File Descriptor (BFD) library, as distributed with GNU Binutils 2.28, stems from an incorrect assumption within the library's handling of relocation sections. Specifically, the libbfd library's code for `objcopy` and `strip` operations assumed that sections of type SHT_REL/SHT_RELA (section types for relocation entries) would always have names starting with a `.rel`/`.rela` prefix. This assumption led to a global buffer over-read error because not all SHT_REL/SHT_RELA sections necessarily follow this naming convention. When the code encountered a differently named section, it could lead to accessing beyond the bounds of allocated buffers, resulting in crashes of applications that use libbfd for binary analysis.

The patch for this issue, as described in the provided commit details, involves changing the approach used to identify sections to which relocations apply. Instead of relying on the section name's prefix, the patch revises the method to be more flexible and handle names that do not begin with the expected `.rel`/`.rela` prefix. This is achieved by updating the interface for `elf_backend_get_reloc_section` and introducing new functions that avoid making assumptions about section name prefixes. Additionally, the patch includes modifications to ensure that any backend function only needs to handle name mapping rather than assume the presence of the `.rel`/`.rela` prefix, thereby addressing the root cause of the vulnerability by eliminating the erroneous assumption about section naming conventions.

In summary, the root cause of CVE-2017-8393 is a flawed assumption in libbfd's handling of SHT_REL/SHT_RELA section names, which led to buffer over-read vulnerabilities. The solution involved changing the logic to be more inclusive and robust, ensuring it can correctly handle a wider variety of section names without leading to crashes.