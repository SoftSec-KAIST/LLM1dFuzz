The root cause of CVE-2017-8393 lies in the incorrect assumption made by the Binary File Descriptor (BFD) library, particularly in how it processes relocation sections in ELF (Executable and Linkable Format) files. Specifically, the library assumed that sections related to relocations (`SHT_REL` and `SHT_RELA` sections) would always have names starting with the `.rel` or `.rela` prefix. This assumption was hardcoded into the library's logic for handling object files for commands like `objcopy` and `strip`.

The vulnerability arises from this assumption leading to a global buffer over-read error. In cases where a relocation section did not follow the naming convention, the program could attempt to read beyond the allocated buffer when trying to match section names. This could cause programs using the libbfd library to crash, as they encounter unexpected data or run out of bounds when accessing memory.

The issue was addressed in commit `bce964aa6c777d236fbd641f2bc7bb931cfe4bf3`, where the code was modified to not make blind assumptions about the prefix of relocation section names. This involved changes to how the library identifies the section to which relocations apply, enabling it to work correctly even when the relocation sections do not follow the expected naming convention. The patch involves updates to several functions and the introduction of a new approach for determining the target section of relocations by passing the name of the section after stripping any `.rel` or `.rela` prefix, rather than relying on a predefined naming pattern. This makes the handling of relocation sections more robust and prevents the buffer over-read problem by ensuring that only valid, expected memory regions are accessed based on the actual names of the sections, not assumptions about their prefixes.