The root cause of CVE-2017-8393 in the Binary File Descriptor (BFD) library, as distributed with GNU Binutils 2.28, is an inappropriate assumption in the handling of section names for relocation sections. Specifically, the vulnerability stems from the expectation that sections for relocation data, denoted as SHT_REL/SHR_RELA, always begin with a .rel/.rela prefix. This assumption is hard-coded into the handling logic for objcopy and strip tools, which utilize the libbfd library to perform analysis and manipulation of binary files.

When this expectation is violated—meaning that if a relocation section does not start with the anticipated .rel/.rela prefix—the tools that rely on libbfd can encounter a global buffer over-read error. This issue arises because the code incorrectly calculates or references memory within the buffer, expecting the names to have a certain structure and offset that matches this naming convention. As a result, operations that attempt to read or process such incorrectly assumed section names can lead to memory access violations, potentially causing the programs to crash. This kind of vulnerability could be exploited in scenarios where an attacker can manipulate the input binary files being processed by the affected tools, leading to denial-of-service conditions or possibly the execution of arbitrary code if the memory access patterns are exploitable in a certain manner.

The patch to rectify this issue involves changing the logic to not blindly skip over an assumed .rel/.rela prefix when handling section names. Instead, modifications in the codebase ensure more robust handling of section names by considering the actual naming rather than making hard-coded assumptions. This includes updates to function interfaces to allow backend functions just to handle name mapping, along with introducing new functions for more accurate retrieval of sections intended for relocation data based on names, without the faulty presumption of a name format. This approach addresses the vulnerability by accommodating a broader set of section names and thus preventing the incorrect buffer access that led to the vulnerability.