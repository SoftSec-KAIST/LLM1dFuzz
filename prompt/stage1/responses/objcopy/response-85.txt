The root cause of CVE-2017-8393 lies in the incorrect assumption made by the Binary File Descriptor (BFD) library, more specifically, in how it handled the naming of SHT_REL/SHR_RELA sections. The affected code assumed that sections of type SHT_REL (Relocation entries without explicit addends) and SHR_RELA (Relocation entries with explicit addends) would always start with the prefixes ".rel" and ".rela" respectively. This assumption led to a global buffer over-read error because when objcopy and strip tools, which rely on the libbfd library for analyzing binary programs, encountered section names that did not conform to this expected naming convention, they did not handle the sections correctly. 

As described, the vulnerability stems from how libbfd processes relocation section names during binary manipulation operations. The flawed assumption about section naming conventions led to the software's inability to correctly interpret and manage certain section headers, ultimately causing crashes due to over-reading buffer boundaries.

This particular issue was addressed in the patch by refining how the libbfd library matches SHT_REL/SHR_RELA section names. The patch removed the strict dependence on the ".rel" and ".rela" prefixes. Instead, the updated code involves more comprehensive handling and checking for relocation section names without assuming they start with specific prefixes. The changes also included updates to interfaces and functions (`_bfd_elf_get_reloc_section` was deleted and replaced with `_bfd_elf_plt_get_reloc_section` and `elf_get_reloc_section`, among other modifications) to support a more robust and flexible approach for identifying and handling these sections. This approach mitigates the vulnerability by ensuring that all SHT_REL/SHR_RELA sections, regardless of their name prefixes, are processed accurately, preventing the buffer over-read scenario.

In summary, the root cause of CVE-2017-8393 is the mistaken assumption about section naming conventions in the BFD library's handling of relocation sections, and the solution involved amending the library to treat these sections more flexibly and safely.