The root cause of CVE-2017-8393 lies in an incorrect assumption within the Binary File Descriptor (BFD) library, specifically in the handling of section names for relocation sections. The vulnerability arises because the `objcopy` and `strip` tools, which rely on the libbfd library, make an assumption that section names for SHT_REL/SHT_RELA sections (sections containing relocation information) always start with a `.rel` or `.rela` prefix. This assumption led to an issue where, if a section did not follow this naming convention, it would trigger a global buffer over-read. A buffer over-read can lead to crashes due to accessing memory outside of the buffer's allocated range, potentially leaking sensitive information or causing a denial of service through the crash itself.

The patch addresses this vulnerability by modifying how relocation sections are handled. Instead of making assumptions about the section names based on prefixes, the patch adjusts the mechanism to properly identify the sections to which the relocations apply, regardless of the specific naming conventions used. This involves changes to the interface of `elf_backend_get_reloc_section` and related functions so that they no longer rely on hardcoded name prefixes to determine the target of relocation entries. Additionally, the patch adds logic to handle cases, such as those involving `.got.plt` or `.got` sections, more explicitly and robustly, further reducing the reliance on naming conventions and preventing the over-read issue.

In summary, the root cause of CVE-2017-8393 was an unsafe assumption about section naming conventions in the BFD library, leading to a buffer over-read vulnerability that the provided patch successfully mitigates by improving the logic for identifying relocation target sections.