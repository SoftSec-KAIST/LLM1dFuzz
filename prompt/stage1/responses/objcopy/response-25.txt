The root cause of CVE-2017-8393 lies in the assumptions made by the Binary File Descriptor (BFD) library regarding the naming conventions of section headers for relocation information in ELF (Executable and Linkable Format) files. Specifically, the vulnerability stems from the assumption that SHT_REL/SHR_RELA sections, which contain relocation information, always start with a .rel/.rela prefix in their names.

This assumption is embedded into the logic of tools like objcopy and strip that use the libbfd library to analyze and manipulate binary files. When these tools encounter a SHT_REL/SHR_RELA section that does not adhere to the expected naming convention, they experience a global buffer over-read error. This is because the tools attempt to access the section's data based on the incorrect assumption about its name, leading to a read operation beyond the bounds of the allocated memory for section names. This kind of memory access violation can cause the programs to crash, which constitutes a denial-of-service condition.

The patched commit addresses this issue by altering the way the BFD library identifies relocation sections. It includes changes to remove the blind reliance on the naming convention by modifying how relocation sections are mapped and processed. This is achieved by changing the parameters and functionality of internal functions such as _bfd_elf_get_reloc_section and introducing new functions like _bfd_elf_plt_get_reloc_section and elf_get_reloc_section. These changes ensure that relocation sections are correctly identified and handled, even if they do not follow the expected naming convention, thus preventing the buffer over-read scenario that leads to crashes.

In summary, the root cause of CVE-2017-8393 is the incorrect assumption in the BFD library regarding the naming patterns of SHT_REL/SHR_RELA sections, leading to buffer over-read errors and crashes when encountering sections that deviate from this pattern. The resolution involves modifying the library's logic to properly handle section names, ensuring stability and robustness in tools utilizing the libbfd for ELF file analysis and manipulation.