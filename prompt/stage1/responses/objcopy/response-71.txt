The root cause of CVE-2017-8393 can be traced back to an incorrect assumption in the Binary File Descriptor (BFD) library used in GNU Binutils, particularly regarding the handling of SHT_REL/SHR_RELA sections in binary files. These sections are used to store relocation information, which is crucial for linking and loading object files in executables.

The key mistake was the assumption that SHT_REL/SHR_RELA sections would always be named starting with the prefix `.rel` or `.rela`. This assumption was flawed because, in practice, SHT_REL/SHR_RELA sections may not adhere to this naming convention. When the BFD library, specifically in utilities like `objcopy` and `strip`, encountered sections that did not fit this naming pattern, it led to a global buffer over-read error.

The over-read error happens because the library tries to access data beyond the allocated buffer based on the incorrect assumption of section names. This kind of error can lead to crashes in the programs using the library, as they might attempt to read invalid memory locations.

The provided patch addresses this issue by changing the mechanism for identifying the sections to which the SHT_REL/SHR_RELA relocations apply. Instead of relying strictly on the section name's prefix, the patch introduces a more flexible function `_bfd_elf_plt_get_reloc_section`, which maps the relocation sections based on actual section names without the strictly enforced prefix requirement. It also includes accommodating target-specific needs, such as handling sections like `.got.plt` for targets that require it, thereby preventing blind skipping over expected prefixes and addressing the global buffer over-read vulnerability.

Overall, the root cause is a combination of a flawed assumption about section naming conventions in ELF files and a lack of validation when accessing data based on these assumptions, which the patch rectifies by implementing a more robust and correct mechanism for identifying relevant sections.