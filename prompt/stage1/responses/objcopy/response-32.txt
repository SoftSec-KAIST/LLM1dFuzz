The root cause of CVE-2017-8393 in the Binary File Descriptor (BFD) library, as described, arises from an incorrect assumption within the library's handling of SHT_REL/SHR_RELA sections, specifically in its handling by utilities like objcopy and strip. These tools are part of GNU Binutils and play a critical role in manipulating binary files. The assumption in question is that the names of SHT_REL/SHR_RELA sections always begin with a .rel/.rela prefix. This premise led to a global buffer over-read error because the code did not consider situations where the sections' names did not adhere to this naming convention.

Such an assumption can lead to problems when parsing binaries that do not follow this naming scheme, potentially resulting in out-of-bounds reads. This is because the logic to retrieve the section to which relocations apply would fail, thus making the program vulnerable to crashes when it tried to access memory outside the allocated ranges.

The patch addresses this issue by altering the way sections are identified and retrieved. Instead of making assumptions based on the section name prefix, the patch revises the functions and the logic involved in identifying relocation sections. It modifies the interface of `elf_backend_get_reloc_section`, allowing backend functions to handle name mapping more flexibly and robustly, without making hardcoded assumptions about the section names. This way, it ensures that relocations are correctly identified and handled, regardless of the naming convention used for the sections.

This improvement is significant because it not only resolves the specific vulnerability but also enhances the robustness of the utilities against similar problems that could arise from unconventional naming or structuring of sections in binaries. It represents a move towards more defensive programming practices in the handling of binary formats, which are often complex and diverse.