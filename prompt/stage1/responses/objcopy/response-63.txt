The root cause of CVE-2017-8393 is an incorrect assumption in the GNU Binutils Binary File Descriptor (BFD) library (specifically libbfd, as distributed in version 2.28) related to the handling of SHT_REL/SHR_RELA sections. The vulnerable code assumed that sections of these types would always be named starting with a .rel/.rela prefix. This assumption led to a global buffer over-read, as the code did not properly verify the existence or correctness of the section names before accessing them. When the assumption was violated (for instance, if a SHT_REL/SHR_RELA section existed without the expected naming convention), it would cause memory access violations. These violations could lead to programs that utilize libbfd for binary analysis, such as objcopy and strip, to crash.

The fix involved changing how the library identifies and handles relocation sections, making it no longer blindly rely on the section names starting with .rel/.rela. It updated the internal logic to properly map or identify the relevant sections based on actual characteristics rather than naming assumptions. This included enhancing the `elf_backend_get_reloc_section` function and related logic to more robustly determine to which section a given relocation applies, without depending solely on name prefixes.

The patch provided by Alan Modra involved modifications across several files (`elf-bfd.h`, `elf.c`, `elf64-ppc.c`, and `elfxx-target.h`) to implement these changes. It introduced a more flexible mechanism for identifying the target section of relocations, allowing for accurate handling of SHT_REL/SHR_RELA sections regardless of naming conventions. This approach mitigated the vulnerability by preventing the previously possible buffer over-read scenarios, thereby improving the overall stability and security of the library when processing binaries with non-standard section names.