The root cause of CVE-2017-8393 is an incorrect assumption in the code handling the Binary File Descriptor (BFD) library, specifically in the operations related to `objcopy` and `strip` commands. The assumption was that section names for relocation data (`SHT_REL`/`SHT_RELA` sections) always start with a `.rel` or `.rela` prefix. Due to this assumption, when the BFD library encounters relocation sections not adhering to this naming convention, it results in a global buffer over-read error. This can cause programs utilizing the libbfd library, such as `objcopy` and `strip`, to crash due to attempting to read beyond the allocated memory space.

The vulnerability is exposed because the code did not adequately verify or handle cases where relocation section names deviate from the expected naming convention, leading to unsafe memory operations based on incorrect assumptions about the structure and naming of data in ELF (Executable and Linkable Format) files.

The patch addresses this issue by changing how relocation sections are identified and handled. It removes the hard-coded assumption about section names and instead dynamically determines which section the relocations apply to by considering the actual names and context, rather than relying on a strict prefix. This approach is more robust and flexible, allowing the handling of various naming conventions without risking buffer over-read vulnerabilities. It involves modifications to the `elf_backend_get_reloc_section` interface among other changes, providing a mechanism where backend functions can properly map relocation sections based on actual names rather than presumed prefixes.