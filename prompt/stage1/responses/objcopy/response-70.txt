The root cause of CVE-2017-8393 in the GNU Binutils Binary File Descriptor (BFD) library (known as libbfd) version 2.28 is an incorrect assumption in the handling of section names for relocation sections in binary files, specifically the sections denoted by SHT_REL and SHT_RELA. The vulnerable code, as utilized by utilities such as objcopy and strip which both rely on libbfd for binary analysis and manipulation, mistakenly assumed that the names of SHT_REL and SHT_RELA sections always start with the prefix `.rel` and `.rela` respectively. 

Due to this assumption, when sections that should have been interpreted as relocation sections did not follow this naming convention, the utilities would not correctly process them. This led to a global buffer over-read error. Essentially, the utilities would access parts of memory beyond the allocated buffer space when they attempted to handle such sections, because the code did not correctly identify and process the sections' names. This vulnerability caused crashes in the affected programs, which could potentially be leveraged by an attacker to cause denial of service or potentially execute arbitrary code by crafting a binary file that triggers the buffer over-read.

The patch for this vulnerability addresses the root cause by changing the way section names are handled. Instead of making an assumption about the section name's prefix, the patch includes modifications to the interface (`elf_backend_get_reloc_section`) to ensure that the handling of section names is more flexible and accurate. By improving how the names of the sections are identified (stripping the `.rel`/`.rela` prefix and dealing with naming exceptions like `.plt`, `.got.plt`, and `.got`), the patch removes the incorrect assumption and ensures correct processing of SHT_REL and SHT_RELA sections, regardless of their specific naming.

Moreover, the patch also adds new functions and defines a refined process for mapping these section names correctly, thereby preventing the buffer over-read error by ensuring that the sections are accurately identified and processed. This comprehensive approach to addressing the naming assumption and handling exception cases safeguards against the previously exploitable vulnerability.