The root cause of CVE-2018-14498 involves an out-of-bounds (OOB) read vulnerability in libjpeg-turbo and MozJPEG when processing malformed 8-bit BMP images. Specifically, this vulnerability arises when one or more of the color indices in an 8-bit BMP file is out of range for the number of palette entries. This out-of-range index leads to a heap-based buffer over-read, potentially causing a denial of service (DoS) via application crash.

The problematic code was in the function `get_8bit_row` in `rdbmp.c`, where there was no validation to check if the color indices that were being read from the input BMP file exceeded the available palette entries defined in the BMP's color table. As a result, when the code attempted to access a colormap entry using an out-of-range index, it would read beyond the bounds of the heap-allocated buffer where the colormap was stored. This could corrupt heap memory or cause the application to crash, leading to a denial of service.

The patch addresses this issue by introducing bounds checking for the color index before accessing the colormap. It adds a `cmap_length` field to the `bmp_source_struct` structure to keep track of the number of entries in the colormap. Before accessing the colormap with a given index, the new code checks if the index is greater than or equal to `cmap_length`. If it is, the code triggers an error condition by calling `ERREXIT` with the newly introduced error message `JERR_BMP_OUTOFRANGE`, effectively preventing the out-of-bounds access. This ensures that only valid indices within the bounds of the allocated colormap can be used, mitigating the vulnerability by preventing heap-based buffer over-reads.

In summary, the root cause was the lack of bounds checking on color indices when processing 8-bit BMP files, and the fix involves validating these indices against the colormap length before accessing palette entries, thus preventing out-of-bounds reads.