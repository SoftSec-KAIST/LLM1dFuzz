The root cause of CVE-2019-7310 in Poppler 0.73.0 appears to be an integer signedness error within the `XRef::getEntry` function, which is located in the file `XRef.cc`. This error leads to a heap-based buffer over-read. The specific issue arises from not properly validating the sign of the index `i` that is passed to the `XRef::getEntry` function. In C++, integers can be either positive or negative, but in the context of an array or buffer index, a negative value does not make logical sense and can lead to out-of-bounds access. 

The problematic behavior occurs when a crafted PDF document is processed, and an attacker manages to induce the application to request an XRef (Cross-Reference) entry using a negative index. Since the original code before the patch didn't check for negative indices, this led to unintended behavior, which could be exploited to cause a denial of service (application crash) or possibly other unspecified impacts.

The patch addresses this security issue by introducing a check at the beginning of the `XRef::getEntry` function. This check explicitly tests if the input index `i` is negative. If so, it logs an error and returns a pointer to a `dummyXRefEntry` instead of attempting to access the `entries` array with a negative index. This effectively prevents the out-of-bounds read by ensuring that only valid, positive indices are used to access entries in the XRef table.

In summary, the root cause of CVE-2019-7310 is inadequate validation of input data (specifically, the lack of a check for negative indices) in the handling of XRef entries in Poppler's PDF processing. The fix properly defends against malicious or erroneous usage of negative indices, thereby mitigating the risk of crashes and other potential impacts stemming from this vulnerability.