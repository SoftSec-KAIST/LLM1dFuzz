The root cause of CVE-2016-9827 in libming 0.4.7, particularly affecting the _iprintf function in outputtxt.c used by the listswf tool, stems from a buffer over-read vulnerability. This type of vulnerability occurs when the program reads data beyond the end or the beginning of the buffer, potentially leading to unexpected behavior like denial of service (DoS).

From the provided patch, we can deduce that the issue was specifically linked to the way the `Protect tag`'s password was being processed. In the original implementation, the password was read using the `readBytes` function, which likely did not properly ensure null-termination or manage out-of-bound reads for strings. This could lead to over-reading the buffer if the length of the bytes read exceeded the actual size of the allocated buffer or if the data being read did not properly represent a null-terminated string. Over-reading could corrupt memory or cause the software to crash, leading to a denial of service.

The patch remedies this vulnerability by changing the method of reading the Protect tag's password from `readBytes(f, length)` to `readString(f)`. The `readString` function, presumably, reads data until it encounters a null terminator, which inherently prevents over-reading past the end of a string. This change ensures that when processing a crafted SWF file, the parsing operation respects string boundaries, thus mitigating the risk of a buffer over-read and the associated denial of service condition.

In summary, the root cause was the inappropriate handling of string data without ensuring buffer boundaries and null termination, which is addressed by the applied patch through the use of a safer string reading function.