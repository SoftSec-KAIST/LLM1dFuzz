The root cause of CVE-2016-9827 appears to stem from how the `listswf` tool in libming version 0.4.7 handled the parsing of the Protect tag's password in a SWF file. Initially, the tool used the `readBytes` function to read a specified number of bytes based on the tag's length from the SWF file into a buffer to handle the password. This approach can lead to a buffer over-read vulnerability if the specified length exceeds the actual data available for the password, potentially allowing a crafted SWF file to cause a Denial of Service (DoS) condition by reading beyond the buffer's end.

The patch addresses this vulnerability by changing the parsing strategy for the Protect tag's password from using the `readBytes` function to employing the `readString` function. The `readString` function likely reads characters from the file until it encounters a termination character (commonly a null byte, `\0`, in C string handling), indicating the end of the string. This method inherently protects against buffer over-reads as it doesn't rely on an externally provided length but rather on the structure of the data itself (the string and its termination condition).

By parsing the Protect tag's password as a string rather than a byte array with a predefined length, the patch eliminates the risk of exceeding the buffer's boundaries, which was the root cause of the buffer over-read vulnerability. This approach ensures that the parsing process respects the actual data format and its natural boundaries, providing a safer mechanism to handle potentially malicious or malformed input.