The root cause of CVE-2016-9827 appears to be related to how the `_iprintf` function in the `outputtxt.c` file of the listswf tool in libming 0.4.7 handles the parsing of the Protect tag's password from a SWF file. Originally, the function attempted to read a raw byte sequence of the specified length as the password with the `readBytes(f, length)` function. This approach could lead to a buffer over-read situation if the Protect tag's indicated length exceeded the actual data length available for the password in the SWF file. Essentially, the parsing logic did not safely handle cases where the SWF file's content could be crafted in a malicious way to specify a length that would cause the parsing function to access memory beyond the intended buffer.

To mitigate the vulnerability, the patch changes the parsing strategy by using the `readString(f)` function instead of `readBytes(f, length)`. The `readString` function likely reads the data up to a null terminator or up to a length that it safely determines from the input, rather than relying on the potentially manipulated length value from the SWF file itself. This change helps prevent a buffer over-read by ensuring the function only reads a string within the bounds of the actual data available, thus addressing the denial of service vulnerability. 

In summary, the root cause of CVE-2016-9827 was the unsafe handling of input lengths for password data in SWF files, leading to potential buffer over-read scenarios. The resolution involved changing the data handling strategy to safely parse passwords as strings, thereby preventing attackers from being able to cause a denial of service through crafted SWF files.