The root cause of CVE-2016-9827 in libming 0.4.7 appears to be a buffer over-read vulnerability in the handling of SWF (Shockwave Flash) files by the listswf tool. Specifically, the issue lies in the parsing of the Protect tag's password in SWF files.

Previously, the function handling the Protect tag's password directly read a series of bytes from the SWF file based on the length specified within the file itself, without treating it as a null-terminated string. This could lead to buffer over-read if an attacker crafted a SWF file with a Protect tag that specifies a length going beyond the actual data allocated for the password. Such a scenario would cause the parser to read beyond the intended buffer, potentially leading to a denial of service (DoS).

The patch addresses this issue by changing the method of reading the Protect tag's password from `readBytes(f, length)` to `readString(f)`. The `readString` function presumably reads characters until it encounters a null terminator, which is a common way to handle strings safely in C. This change ensures that the parser treats the password data as a string, avoiding over-reads by not relying on the externally defined length which might be manipulated by an attacker.

In summary, the root cause was an unsafe handling of external input (the length of the password field in the Protect tag of a SWF file) which led to a buffer over-read vulnerability. The fix ensures the input is handled safely by treating it as a string and reading until a natural termination point (a null character) rather than relying on potentially malicious input to dictate the read length.